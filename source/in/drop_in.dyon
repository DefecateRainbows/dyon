fn main() {
    done := in done
    th := go run()
    sleep(4)

    // Shows that drop in listening is possible,
    // by creating the receiver after starting the task thread.
    foo_log := in foo
    loop {
        done_val := next(done)
        loop {
            x := next(foo_log)
            if x == none() {break}
            println(unwrap(x))
        }
        if done_val != none() {break}
    }
}

// This function is used to send data between threads.
fn foo(x: f64) {}
fn done() {}

fn run() -> bool {
    for i 10 {
        foo(i+1)
        sleep(1)
    }
    done()
    return true
}
