/*
This example shows how to process data chunkwise by reading
at slower intervals.
*/

fn main() {
    log := in log
    done := in done
    th := go run()
    loop {
        done_val := next(done)
        loop {
            x := next(log)
            if x == none() {break}
            print(unwrap(x))
        }
        println("")
        if done_val != none() {break}
        sleep(0.5)
    }
    _ := join(thread: th)
}

fn log(x: f64) {}
fn done() {}

fn run() -> bool {
    for i 100 {
        log(i)
        sleep(0.1)
    }
    done()
    return true
}
