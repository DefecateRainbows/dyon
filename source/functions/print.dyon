
fn main() {
    fs := functions()
    n := len(fs)
    // type := "intrinsic"
    type := "external"
    // type := "loaded"
    for i := 0; i < n; i += 1 {
        if fs[i].type != type { continue }
        print(function: fs[i])
    }
    // println(fs)

    say_hello()
    homer := homer()
    println(homer())
    homer = age(homer)
    println(homer)

    println(mr(homer.first_name, homer.last_name))

    println(origo())

    // Create a custom Rust object.
    custom_object := custom_object()
    foo(custom_object)

    println(id())
}

// Use `any` as ad-hoc inner type because it defaults to `{}`.
// Rust objects do not have their own static types in Dyon.
fn foo(custom_object: CustomObject any) {
    println("Passing custom object")
    print_custom_object(custom_object)
}
